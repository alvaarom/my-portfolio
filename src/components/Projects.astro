---
import GitHub from "./icons/GitHub.astro";
import ExpressJS from "./icons/Express.astro";
import ElectronJS from "./icons/Electron.astro";
import ReactJS from "./icons/React.astro";
import SASS from "./icons/SASS.astro";
import Expo from "./icons/Expo.astro";
import Sequelize from "./icons/Sequelize.astro";
import MySQL from "./icons/MySQL.astro";
import Firebase from "./icons/Firebase.astro";
import LinkButton from "./LinkButton.astro";

const TAGS = {
  EXPRESS: {
    name: "Express",
    class: "bg-gray-200 text-black",
    icon: ExpressJS,
  },
  REACTNATIVE: {
    name: "React Native",
    class: "bg-black text-white",
    icon: ReactJS,
  },
  EXPO: {
    name: "Expo",
    class: "bg-gray-200 text-black",
    icon: Expo,
  },
  REACT: {
    name: "ReactJS",
    class: "bg-black text-white",
    icon: ReactJS,
  },
  ELECTRON: {
    name: "ElectronJS",
    class: "bg-black text-white",
    icon: ElectronJS,
  },
  SEQUELIZE: {
    name: "Sequelize",
    class: "bg-black text-white",
    icon: Sequelize,
  },
  FIREBASE: {
    name: "Firebase",
    class: "bg-black text-white",
    icon: Firebase,
  },
  MYSQL: {
    name: "MySQL",
    class: "bg-gray-200 text-black",
    icon: MySQL,
  },
  SASS: {
    name: "SASS",
    class: "bg-black text-white",
    icon: SASS,
  },
};
const PROJECTS = [
  {
    title: "DTechLife",
    description:
      "eCommerce para conectar entrenadores con alumnos creado con React, Express y MySQL",
    github: "https://github.com/alvaarom/grupo_4_dteachlife",
    image: "/projects/dtechlife.png",
    tags: [TAGS.REACT, TAGS.EXPRESS, TAGS.SEQUELIZE, TAGS.MYSQL],
  },
  {
    title: "Buscar Peliculas",
    description:
      "Aplicacion de chat en tiempo real creada con React Native y Firebase.",
    github: "https://github.com/alvaarom/chat-realtime",
    image: "/projects/chatapp.png",
    tags: [TAGS.REACTNATIVE, TAGS.FIREBASE],
  },
  {
    title: "Buscar Peliculas",
    description:
      "Aplicacion para buscar peliculas creada con React Native y The Movies Database API (themoviedb.org)",
    github: "https://github.com/alvaarom/movieapp",
    image: "/projects/movies.png",
    tags: [TAGS.REACTNATIVE],
  },
  {
    title: "Registro de cumpleaños",
    description:
      "Aplicacion para registro de cumpleaños creada con React Native y Firebase.",
    github: "https://github.com/alvaarom/birthday",
    image: "/projects/birthday.png",
    tags: [TAGS.REACTNATIVE, TAGS.FIREBASE],
  },
  {
    title: "Musicfy",
    description:
      "Aplicacion de escritorio como Spotify. Creada con React JS, Electron JS, Firebase y SASS",
    github: "https://github.com/alvaarom/musicfy",
    image: "/projects/musify.png",
    tags: [TAGS.REACT, TAGS.ELECTRON, TAGS.FIREBASE, TAGS.SASS],
  },
  {
    title: "Cotizador de Prestamos",
    description: "Aplicacion para cotizar prestamos. Creada con React Native.",
    github: "https://github.com/alvaarom/cotizador-prestamos",
    image: "/projects/cotizador.png",
    tags: [TAGS.REACTNATIVE],
  },
  {
    title: "Pokedex",
    description:
      "Aplicacion para obtener datos de Pokémon. Consultando PokeAPI (pokeapi.co). Creada con React Native.",
    github: "https://github.com/alvaarom/pokedex",
    image: "/projects/pokedex.png",
    tags: [TAGS.EXPO, TAGS.REACTNATIVE],
  },
];
---

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ image, title, description, tags, github }) => (
      <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
        <div class="w-full md:w-1/2">
          <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
            <img
              alt={title}
              class="object-contain object-top max-w-80 max-h-48 transition duration-500 sm:h-full md:scale-110 md:group-hover:scale-105"
              loading="lazy"
              src={image}
            />
          </div>
        </div>

        <div class="w-full md:w-1/2 md:max-w-lg">
          <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
            {title}
          </h3>
          <div class="flex flex-wrap mt-2">
            <ul class="flex flex-row mb-2 gap-x-2">
              {tags.map((tag) => (
                <li>
                  <span
                    class={`flex gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2 `}
                  >
                    <tag.icon class="size-4" />
                    {tag.name}
                  </span>
                </li>
              ))}
            </ul>

            <div class="mt-2 text-gray-700 dark:text-gray-400">
              {description}
            </div>
            <footer class="flex items-end justify-start mt-4 gap-x-4">
              {github && (
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              )}
            </footer>
          </div>
        </div>
      </article>
    ))
  }
</div>
